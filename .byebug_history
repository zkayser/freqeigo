continue
deck.inspect
continue
deck.sandbox_passed
puts deck
continue
deck.current_sandbox_due_length
deck
deck.save
deck
deck.add_to_sandbox_passed_array(self.id)
deck
deck.sandbox_passed
self.id
self
continue
self
current_user
@decks
continue
params
continue
params
continue
card.inspect
card
card = Card.find_by(id: params[:card])
card
card.to_a
card
card = Card.find(params[:card])
card = Card.find(params[:card]
params
continue
params
continue
f.hidden_field :deck, value: @deck.id
params
continue
params[:card][:deck]
params[:deck]
params
continue
params[:deck]
@deck
continue
params
continue
params
continue
params
continue
params
continue
params
continue
params
continue
@word_list.words.all.to_a.each { |word| puts word }
@word_list.words.count
@word_list.words.any?
@word_list
continue
@facts
@fact_hash
continue
@fact_hash
params.each { |k, v| @fact_hash[k] = v if k.match(fact_match) }
params
@fact_hash
params.each do |k, v|
fs = {}
fs.merge params
fs << params
fs = {}
str1.match(regex)
str1 = "fact_t"
str.match(regex)
regex = /fact_\d/
str = "fact_1"
params
continue
params
continue
params[:title]
params
continue
@example_sentence.example_translations.any?
params
@example_sentence
@word
continue
sentence_params
@example_sentence.destroy
@word.word
@word
params
params[:example_translation]
@example_sentence.example_translations.any?
@example_sentence
continue
render(form).html_safe.html_safe
render(form).html_safe
render form
continue
@due.length
@due
continue
@due.length
continue
@deck.current_due.length
@deck
continue
printenv AWS_SECRET_ACCESS_KEY
ENV['AWS_SECRET_ACCESS_KEY']
continue
Stripe::Customer.create(email: params[:stripeEmail], source: params[:stripeToken], plan: params[:plan])
continue
params
continue
end
continue
puts "#{attribute}" + "[#{match}]"
puts "#{attribute} + "[#{match}]"
puts attribute + "[#{match}]"
puts attribute[match]
puts match
puts attribute
continue
pairings.flatten(2)
pairings
pairings.flatten
pair_array.each { |pair| pair.each { |p| puts p.inspect }}
pair_array.each do { |pair| pair.each { |p| puts p.inspect}}
pair_array.each { |pair| pair.each { |p| puts p }}
pair_array.each { |pair| puts pair.inspect }
pair_array.each 
pair_array.each { |pair|  pair }
pair_array
pair_array.each do |pair|
pairings
pair_array
pairings.inspect
puts pairings
continue
params["antonyms"]["word"]
params["word"]["antonyms"]
params["word"]["synonyms"]
params["word"]["hiragana"]
params["word]["antonyms"]
params.inspect
continue
output_array
continue
params["hiragana"]
params["word"]
params[:word][:hiragana]
params[:word][:word]
puts params
inside.to_sym
puts inside.to_sym
puts inside.inspect
continue
puts params[:word][:hiragana]
continue
puts params[:word_hiragana]
puts params[:word][:hiragana]
continue
puts params.inspect
continue
"word"
select_tag
select_options
continue
default_array
continue
attribute
top
continue
array
no_duplicates.each do |nope|; puts nope.to_s; end;
no_duplicates.each do |nope|
no_duplicates
top
